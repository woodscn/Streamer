# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008, 2009, 2010, 2011, 2012 SymPy Development Team
# This file is distributed under the same license as the SymPy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: SymPy 0.7.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-12-27 11:31\n"
"PO-Revision-Date: 2011-12-27 11:52-0800\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# f84d341a1db74f57ba29a7b6c3c2edd9
#: ../../src/tutorial.rst:5
msgid "Tutorial"
msgstr "Tutoriál"

# dae967c0fdb14ea88ac2acf861130402
#: ../../src/tutorial.rst:10
msgid "Introduction"
msgstr "Úvod"

# 946c4116f6b4470c9bd363baa4085f07
#: ../../src/tutorial.rst:12
msgid "SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible.  SymPy is written entirely in Python and does not require any external libraries."
msgstr "SymPy je knihovna jazyka Python pro symbolickou matematiku. Má za cíl stát se kompletním počítačovým algebraickým systémem (CAS, Computer algebra system) a zároveň být co nejjednodušší, aby byla pochopitelná a jednoduše rozšiřitelná. SymPy je napsaná kompletně v jazyce Python a nepotřebuje žádné externí knihovny."

# 7d5e63b794a44e069a63a12902c8c233
#: ../../src/tutorial.rst:17
msgid "This tutorial gives an overview and introduction to SymPy. Read this to have an idea what SymPy can do for you (and how) and if you want to know more, read the :ref:`SymPy User's Guide <guide>`, :ref:`SymPy Modules Reference <module-docs>`. or the `sources <https://github.com/sympy/sympy/>`_ directly."
msgstr "Tento tutoriál je úvodem do SymPy a zároveň ukazuje, co SymPy umí. Přečtěte si ho, aby jste zjistili, jak pro vás může být SymPy užitečná a pokud budete chtít vědět víc, přečtěte si :ref:`Uživatelskou příručku SymPy <guide>`, :ref:`Přehled modulů SymPy <module-docs>`. nebo přímo `zdrojové kódy <https://github.com/sympy/sympy/>`_"

# 6b78e0f225174e669fa5ab7877cb6b7f
#: ../../src/tutorial.rst:26
msgid "First Steps with SymPy"
msgstr "První kroky se SymPy"

# 09726dfba6634928bc673ade5d89e66b
#: ../../src/tutorial.rst:28
msgid "The easiest way to download it is to go to http://code.google.com/p/sympy/ and download the latest tarball from the Featured Downloads:"
msgstr "Nejjednodušší způsob, jak stáhnout SymPy je jít na http://code.google.com/p/sympy/ a stáhnout nejnovější verzi z doporučených zdrojů:"

# 95da13d57e534846abe6d3ae2b3f39d0
#: ../../src/tutorial.rst:34
msgid "Unpack it:"
msgstr "Rozbalit ji:"

# e9b7c89586dc4262a1c0407754dcd7e9
#: ../../src/tutorial.rst:40
msgid "and try it from a Python interpreter:"
msgstr "a vyzkoušet jí v interpretru Pythonu:"

# f6ee1f1e72cd4de781fc5774120042fb
#: ../../src/tutorial.rst:54
msgid "You can use SymPy as shown above and this is indeed the recommended way if you use it in your program. You can also install it using ``./setup.py install`` as any other Python module, or just install a package in your favourite Linux distribution, e.g.:"
msgstr "Můžete používat SymPy, jak vidíte výše, což je doporučený způsob pokud jí používate ve svém programu. Můžete si jí také nainstalovat pomocí ``./setup.py install`` jako každý modul Pythonu nebo si jednoduše nainstalovat balíček do vaší oblíbené distribuce Linuxu. Například:"

# cfcc2605ea584cf2af47c450edadccbf
#: ../../src/tutorial.rst:80
msgid "For other means how to install SymPy, consult the  Downloads_ tab on the SymPy's webpage."
msgstr "Pro další způsoby instalace SymPy si prohlédněte záložku Downloads_ na stránkách SymPy."

# a19913e1d97f4b2b8559d097d92e1851
#: ../../src/tutorial.rst:87
msgid "isympy Console"
msgstr "isympy konzole"

# ff2cbec326eb4f1f98083e84d4dec8db
#: ../../src/tutorial.rst:89
#, fuzzy
msgid "For experimenting with new features, or when figuring out how to do things, you can use our special wrapper around IPython called ``isympy`` (located in ``bin/isympy`` if you are running from the source directory) which is just a standard Python shell that has already imported the relevant SymPy modules and defined the symbols x, y, z and some other things:"
msgstr "Při zkoušení nových funkcí nebo když se snažíte něčemu přijít na kloub, můžete použít na IPythonu založenou ``isympy`` (umístěnou v ``bin/isympy``, pokud jí spouštíte ze složky se zdrojovým kódem) což je prostě standardní Python shell, který má zapojené související SymPy moduly a definoval symoboly x, y, z a některé další věci:"

# 4756c54ede09438e885a543ffe5c3c19
#: ../../src/tutorial.rst:119
msgid "Commands entered by you are bold. Thus what we did in 3 lines in a regular Python interpreter can be done in 1 line in isympy."
msgstr "Vámi zadané příkazy jsou tučně. Vidíme, že to, co bychom udělali ve 3 řádcích v běžném interpretru Pythonu, lze udělat v isympy v 1 řádku."

# a50006bf0aed4e2a8a3967edb9ef7afa
#: ../../src/tutorial.rst:124
msgid "Using SymPy as a calculator"
msgstr "SymPy jako kalkulačka"

# 88460153b0404c1c80d7d9fef1b9d530
#: ../../src/tutorial.rst:126
#, fuzzy
msgid "SymPy has three built-in numeric types: Float, Rational and Integer."
msgstr "SymPy má zabudované tři číselné typy: Float, Rational a Integer."

# 668a48de987a4bd6bb25e6319aa18ba2
#: ../../src/tutorial.rst:128
msgid "The Rational class represents a rational number as a pair of two Integers: the numerator and the denominator. So Rational(1,2) represents 1/2, Rational(5,2) represents 5/2, and so on."
msgstr "Třída Rational reprezentuje racionální čísla jako dvojici Integerů: čitatel a jmenovatel Takže Rational(1,2) reprezentuje 1/2, Ration(5,2) reprezentuje 5/2, a tak dále."

# e2a928259dea44eaa3cabe0fee4bdd78
#: ../../src/tutorial.rst:147
msgid "Proceed with caution while working with Python int's and floating point numbers, especially in division, since you may create a Python number, not a SymPy number. A ratio of two Python ints may create a float -- the \"true division\" standard of Python 3 and the default behavior of ``isympy`` which imports division from __future__::"
msgstr "Postupujte opatrně, když pracujete s Inty a Floaty v Pythonu, obzvlášť při dělení, jelikož můžete vytvořit číslo Pythonu místo SymPy. Podíl dvou Intů v Pythonu může vytvořit Float -- \"pravé dělení\", standard Pythonu 3 a defaultní chování ``isympy``, které vkládá dělení z __future__::"

# 3f86f4cd341e4872b08b2ae231c0c8c8
#: ../../src/tutorial.rst:157
msgid "But in earlier Python versions where division has not been imported, a truncated int will result::"
msgstr "Ale v dřívějších verzích Pythonu, kde nebylo dělení zakomponováno, vyšel oříznutý int::"

# 9dbc717a5cd64ee7977c80343f7a92d9
#: ../../src/tutorial.rst:163
msgid "In both cases, however, you are not dealing with a SymPy Number because Python created its own number. Most of the time you will probably be working with Rational numbers, so make sure to use Rational to get the SymPy result. One might find it convenient to equate ``R`` and Rational::"
msgstr "V obou případech se nejedná o číslo SymPy, protože Python vytvořil své vlastní číslo. Většinu času budete pravděpodobně pracovat s čísly Rational, takže dávejte pozor, abyste používali Rational a dostali tak výsledek SymPy. Někomu může připadat příhodné používat místo dlouhého Rational krátké ``R``::"

# 3ee8ed81cd7e4bfdadf807a0b9b12e2d
#: ../../src/tutorial.rst:175
msgid "We also have some special constants, like e and pi, that are treated as symbols (1+pi won't evaluate to something numeric, rather it will remain as 1+pi), and have arbitrary precision::"
msgstr "Také máme k dispozici několik konstant, jak e nebo pí, se kterými se pracuje jako se symboly (1+pi se nevypočítá jako numerická hodnota, ale ponechá se 1+pi) a mají libovolnou přesnost::"

# a1a7546a35f24edd8c11b1f05ea460e2
#: ../../src/tutorial.rst:189
msgid "as you see, evalf evaluates the expression to a floating-point number"
msgstr "jak vidíte, evalf vyhodnotí výraz na číslo s pohyblivou desetinnou čárkou."

# fac72aa95a124064a2e37da6e411c43a
#: ../../src/tutorial.rst:191
msgid "The symbol ``oo`` is used for a class defining mathematical infinity::"
msgstr "Symbol ``oo`` se používá pro třídu definující matematické nekonečno::"

# aa2936b52b8042dead3f4bb1c049edc1
#: ../../src/tutorial.rst:200
msgid "Symbols"
msgstr "Symboly"

# a2cdfc56d552408aacd4e540068fba20
#: ../../src/tutorial.rst:202
msgid "In contrast to other Computer Algebra Systems, in SymPy you have to declare symbolic variables explicitly::"
msgstr "Narozdíl od jiných počítačových algebraických systémů, v SymPy je třeba explicitně deklarovat symbolické proměnné::"

# 18ad6f7b7485464590ced492159ac132
#: ../../src/tutorial.rst:209
#, fuzzy
msgid "On the left is the normal Python variable which has been assigned to the SymPy Symbol class. Predefined symbols (including those for symbols with Greek names) are available for import from abc:"
msgstr "Nalevo je běžná proměnná Pythonu, která byla přiřazená SymPy třídě Symbol. Instance třídy Symbol \"si dobře rozumí\" a jsou to stavební kameny výrazů::"

# 4b6a9120a0484d06b47f8101bdc90f9f
#: ../../src/tutorial.rst:215
msgid "Symbols can also be created with the ``symbols`` or ``var`` functions, the latter automatically adding the created symbols to the namespace, and both accepting a range notation:"
msgstr "Symboly mohou být vytvořeny pomocí funkcí ``symbols`` nebo ``var``, kde funkce ``var`` automaticky přídá vytvořené symboly do namespace, a jak ``symbols``, tak ``var`` podporují range notaci:"

# 18ad6f7b7485464590ced492159ac132
#: ../../src/tutorial.rst:227
#, fuzzy
msgid "Instances of the Symbol class \"play well together\" and are the building blocks of expresions::"
msgstr "Nalevo je běžná proměnná Pythonu, která byla přiřazená SymPy třídě Symbol. Instance třídy Symbol \"si dobře rozumí\" a jsou to stavební kameny výrazů::"

# 76d8e041db1c4be7926bb34608f07db0
#: ../../src/tutorial.rst:239
msgid "They can be substituted with other numbers, symbols or expressions using ``subs(old, new)``::"
msgstr "Mohou být nahrazeny jinými čísly, symboly nebo výrazy použitím ``subs(stary, novy)``::"

# 25a498aa5bce46298b6bf5909ae5c45e
#: ../../src/tutorial.rst:250
msgid "For the remainder of the tutorial, we assume that we have run::"
msgstr "Pro celý zbytek tutoriálu předpokládejme, že jsme zadali::"

# 94b13605b8b74a32a7780b10b7c94cfa
#: ../../src/tutorial.rst:255
msgid "This will make things look better when printed. See the :ref:`printing-tutorial` section below. If you have a unicode font installed, you can pass use_unicode=True for a slightly nicer output."
msgstr "To nám zajistí hezčí výstup. Koukněte do sekce níže :ref:`printing-tutorial-cs`. Pokud máte nainstalovaný font unicode, volbou ``use_unicode=True`` dostanete o něco hezčí výstup."

# 292336f5375a4825bbf4806826fa3f02
#: ../../src/tutorial.rst:260
msgid "Algebra"
msgstr "Algebra"

# 5c2f240042984f8cb50782f5d167085a
#: ../../src/tutorial.rst:262
msgid "For partial fraction decomposition, use ``apart(expr, x)``::"
msgstr "Pro rozklad na parciální zlomky, použijte ``apart(expr, x)``::"

# fa0a6c4d37934cb582f9f54330f04797
#: ../../src/tutorial.rst:287
msgid "To combine things back together, use ``together(expr, x)``::"
msgstr "Pro zpětné sdružení věcí dohromady, použijte ``together(expr, x)``::"

# c50715a5f4c24b51a02423023e843c4a
#: ../../src/tutorial.rst:309
msgid "Calculus"
msgstr "Analýza"

# bbf0449787ed48dcaceb6997bd1af1d9
#: ../../src/tutorial.rst:314
msgid "Limits"
msgstr "Limity"

# 30fd6e8326d146e1a90ecf4a9d974039
#: ../../src/tutorial.rst:316
#, fuzzy
msgid "Limits are easy to use in SymPy, they follow the syntax ``limit(function, variable, point)``, so to compute the limit of f(x) as x -> 0, you would issue ``limit(f, x, 0)``::"
msgstr "Limity se používají v sympy jednoduše, pomocí syntaxe ``limit(function, variable, point)``, takže pro vypočtení limity f(x) pro x -> 0 byste dosadili ``limit(f, x, 0)``::"

# b61572954db04b9bbadb7b3214bce620
#: ../../src/tutorial.rst:325
msgid "you can also calculate the limit at infinity::"
msgstr "také můžete spočítat limitu v nekonečnu::"

# 3b225244a3534797943e1911bc99109c
#: ../../src/tutorial.rst:336
msgid "for some non-trivial examples on limits, you can read the test file `test_demidovich.py <https://github.com/sympy/sympy/blob/master/sympy/series/tests/test_demidovich.py>`_"
msgstr "pro některé netriviální příklady limit si můžete přečíst testovací soubor  `test_demidovich.py <https://github.com/sympy/sympy/blob/master/sympy/series/tests/test_demidovich.py>`_"

# 839cdd6f6dc246d381cf4ae32fe75973
#: ../../src/tutorial.rst:343
msgid "Differentiation"
msgstr "Derivace"

# 8e81b82b9f6f44e1ab31a0eecf761366
#: ../../src/tutorial.rst:345
msgid "You can differentiate any SymPy expression using ``diff(func, var)``. Examples::"
msgstr "Můžete derivovat libovolný výraz v SymPy pomocí ``diff(func, var)``. Například::"

# 351f72597cd9412b86c05ec2d2ad9dc7
#: ../../src/tutorial.rst:358
msgid "You can check, that it is correct by::"
msgstr "Výsledek si můžete zkontrolovat::"

# cae093b9d4874e55af4aa3e86c9333a8
#: ../../src/tutorial.rst:366
msgid "Higher derivatives can be calculated using the ``diff(func, var, n)`` method::"
msgstr "Vyšší derivace můžete spočítat pomocí ``diff(func, var, n)``::"

# 6798e5997ac849c5bfff0a0f32eb45a0
#: ../../src/tutorial.rst:383
msgid "Series expansion"
msgstr "Rozvoj v řady"

# 6be2148c83b94a408dddc9fb92a20464
#: ../../src/tutorial.rst:385
msgid "Use ``.series(var, point, order)``::"
msgstr "Použijte ``.series(var, point, order)``::"

# a563c2fe1ff84fee9b610aebf5c12392
#: ../../src/tutorial.rst:400
msgid "Another simple example::"
msgstr "Další jednoduchý příklad::"

# 8af7fecfb1ca4c4993be2cce5b8f71cc
#: ../../src/tutorial.rst:420
msgid "Integration"
msgstr "Integrály"

# f81cf544a82f45fd9692fd3396982404
#: ../../src/tutorial.rst:422
msgid "SymPy has support for indefinite and definite integration of transcendental elementary and special functions via ``integrate()`` facility, which uses powerful extended Risch-Norman algorithm and some heuristics and pattern matching::"
msgstr "SymPy umí počítat neurčité a určité integrály elementárních a speciálních transcendentních funkcí pomocí fuknce ``integrate()``, která využívá silného rozšířeného Risch-Normanova algoritmu, některých heuristik a porovnávání vzorků::"

# 3a1e02d1dd1c47afbb378ed9627a9a6e
#: ../../src/tutorial.rst:430
msgid "You can integrate elementary functions::"
msgstr "Můžete integrovat elementární funkce::"

# 5393cd6b23a1412897e45ad8728e211c
#: ../../src/tutorial.rst:443
msgid "Also special functions are handled easily::"
msgstr "Také speciální funkce lze jednoduše integrovat::"

# 6be3be4378614e3883fafdcf154a07e1
#: ../../src/tutorial.rst:451
#, fuzzy
msgid "It is possible to compute definite integrals::"
msgstr "Je možné vypočítat určitý integrál::"

# 06c6ca9048d147f5a7b35ade18b3eb06
#: ../../src/tutorial.rst:460
#, fuzzy
msgid "Also, improper integrals are supported as well::"
msgstr "Podporovány jsou i nevlastní integrály::"

# 06e8b87c46524596870768e0c1b70375
#: ../../src/tutorial.rst:472
msgid "Complex numbers"
msgstr "Komplexní čísla"

# ebb5ccfc3a6a4bc0b815ccb8d1206864
#: ../../src/tutorial.rst:474
msgid "Besides the imaginary unit, I, which is imaginary, symbols can be created with attributes (e.g. real, positive, complex, etc...) and this will affect how they behave::"
msgstr "Kromě imaginárního čísla, I, symboly mohou být vytvořeny s atributy (například real, positive, complex, atd...), a to ovlivní jak se budou chovat:"

# abb5f8441604412088acea01599d35ca
#: ../../src/tutorial.rst:491
msgid "Functions"
msgstr "Funkce"

# 45e5a176a38a4d6a817ba27ecbe21fb2
#: ../../src/tutorial.rst:493
msgid "**trigonometric**::"
msgstr "**trigonometrické**::"

# fbfc937ac98f4b24976c97a9d186d8df
#: ../../src/tutorial.rst:542
msgid "**spherical harmonics**::"
msgstr "**Sférické funkce**::"

# 589cd74e37ba4bd999e3ad52111ccae0
#: ../../src/tutorial.rst:568
msgid "**factorials and gamma function**::"
msgstr "**Faktoriály a gamma funkce**::"

# 53393f998d7d42148aca75cea7613c2e
#: ../../src/tutorial.rst:586
msgid "**zeta function**::"
msgstr "**Zeta funkce**::"

# 6e1ba3c25e1c495b86c474aec7febb89
#: ../../src/tutorial.rst:611
msgid "**polynomials**::"
msgstr "**Polynomy**::"

# 1f1c9e26c1964efc871080bbdcf7ce25
#: ../../src/tutorial.rst:650
msgid "Differential Equations"
msgstr "Diferenciální rovnice"

# 59b93c90e0674876927c83388979f2af
# cd9b7d592e2a4d7495e2fcdfca2396a2
#: ../../src/tutorial.rst:652
#: ../../src/tutorial.rst:672
msgid "In ``isympy``::"
msgstr "V ``isympy``::"

# 4cffa88d2f5a41ffad3ca85263be5cdc
#: ../../src/tutorial.rst:670
msgid "Algebraic equations"
msgstr "Algebraické rovnice"

# 31729299063d4327ba7ca7be58cbe527
#: ../../src/tutorial.rst:685
msgid "Linear Algebra"
msgstr "Lineární algebra"

# cdd55a83a58849d8b269cf4510cca6d1
#: ../../src/tutorial.rst:690
msgid "Matrices"
msgstr "Matice"

# 8257ad14575648b9a440a388e92e358a
#: ../../src/tutorial.rst:692
msgid "Matrices are created as instances from the Matrix class::"
msgstr "Matice jsou vytvořeny jako instance třídy Matrix::"

# b1ba9d6bc4dd4f04b169a9dce0c0d99c
#: ../../src/tutorial.rst:700
#, fuzzy
msgid "They can also contain symbols::"
msgstr "Lze tam také vložit symboly::"

# bfa056d84c964bdc9ee54b572767409c
#: ../../src/tutorial.rst:715
#, fuzzy
msgid "For more about Matrices, see the Linear Algebra tutorial."
msgstr "Pro více informací a příkladů s maticemi se podívejte na Linear Algebra tutorial."

# ce462773103a4863b167e3e262088ae9
#: ../../src/tutorial.rst:720
msgid "Pattern matching"
msgstr "Porovnávání vzorků"

# a5d8f822d44c4096961c41b08cff6e14
#: ../../src/tutorial.rst:722
msgid "Use the ``.match()`` method, along with the ``Wild`` class, to perform pattern matching on expressions. The method will return a dictionary with the required substitutions, as follows::"
msgstr "Použijte metodu ``.match()`` spolu s třídou ``Wild`` pro porovnávání výrazů. Metoda vrátí slovník s požadovanými substitucemi, jako vidíme zde::"

# 5f158aedb06b423db47571b42707a90e
#: ../../src/tutorial.rst:736
msgid "If the match is unsuccessful, it returns ``None``::"
msgstr "Pokud je porovnání neúspěšné, vrátí ``None``::"

# 94228299551d420ea0cf91f8fd4771b9
#: ../../src/tutorial.rst:741
msgid "One can also use the exclude parameter of the ``Wild`` class to ensure that certain things do not show up in the result::"
msgstr "Lze také použít parametr ``exclude`` třídy ``Wild``, aby se určité věci nezobrazily ve výsledku::"

# c37af88a913f435981453293ccbb69e5
#: ../../src/tutorial.rst:755
msgid "Printing"
msgstr "Výpis"

# 4a29361607f2475989e5138637b0073a
#: ../../src/tutorial.rst:757
msgid "There are many ways to print expressions."
msgstr "Je spousta způsobů, jak mohou být výrazy vypisovány."

# bfb32e3c79d843a2b8cbad8e5e3eb4b8
#: ../../src/tutorial.rst:759
msgid "**Standard**"
msgstr "**Standardní**"

# 56356973c075448783d26e47c6a06064
#: ../../src/tutorial.rst:761
msgid "This is what ``str(expression)`` returns and it looks like this:"
msgstr "To je to, co vrátí ``str(expression)`` a vypadá to takto::"

# f1b2fcd3f3414b6e91cab1f71b6a4e1a
#: ../../src/tutorial.rst:772
msgid "**Pretty printing**"
msgstr "**Pěkný výpis**"

# a0d1b3c10c144fa19f684a85fe622493
#: ../../src/tutorial.rst:774
#, fuzzy
msgid "Nice ascii-art printing is produced by the ``pprint`` function:"
msgstr "To je pěkný ascii-art výpis vytvořený funkcí ``pprint``::"

# 9af477bd9adc4d09bf14defba6cdc2bf
#: ../../src/tutorial.rst:793
#, fuzzy
msgid "If you have a unicode font installed, the ``pprint`` function will use it by default. You can override this using the ``use_unicode`` option.:"
msgstr "Pokud máte nainstalované písmo unicode, měla by ho funkce automaticky využívat. Využívání unicode písma se dá nastavit změnou ``use_unicode``::"

# 84d8d1e95190474fb633112eaca07332
#: ../../src/tutorial.rst:803
msgid "See also the wiki `Pretty Printing <https://github.com/sympy/sympy/wiki/Pretty-Printing>`_ for more examples of a nice unicode printing."
msgstr "Pro více příkladů pěkného unicode výstupu koukněte na wiki na `Pretty Printing <https://github.com/sympy/sympy/wiki/Pretty-Printing>`_"

# 919e23979e684267a33d1f30399957ed
#: ../../src/tutorial.rst:807
#, fuzzy
msgid "Tip: To make pretty printing the default in the Python interpreter, use::"
msgstr "Tip: Pokud chcete v interpretru Pythonu pěkné vypisování používat defaultně, proveďte::"

# 4e1d49f68b984ff3942a1ad1b4e98100
#: ../../src/tutorial.rst:830
msgid "**Python printing**"
msgstr "**Python výstup**::"

# f8a8af14ba474b2fad3f553da2b898b6
#: ../../src/tutorial.rst:846
msgid "**LaTeX printing**"
msgstr "**LaTeX výstup**::"

# ff5160027cfd45ad87915f270bf6b6cf
#: ../../src/tutorial.rst:863
msgid "**MathML**"
msgstr "**MathML**::"

# 43fb7c8304f145748db346289d43e36a
#: ../../src/tutorial.rst:875
msgid "**Pyglet**"
msgstr "**Pyglet**::"

# 64d1c80142fd4e29b7d0153b753423c1
#: ../../src/tutorial.rst:881
#, fuzzy
msgid "If pyglet is installed, a pyglet window will open containing the LaTeX rendered expression:"
msgstr "A vyskočí pyglet okno s výrazem formátovaným v LaTeXu:"

# fa6c57fbfbaf42be8755edea03f65b33
#: ../../src/tutorial.rst:887
msgid "Notes"
msgstr "Poznámky"

# abd59a7cd8f942e28c3a44694ab7a6e5
#: ../../src/tutorial.rst:889
msgid "``isympy`` calls ``pprint`` automatically, so that's why you see pretty printing by default."
msgstr "``isympy`` volá ``pprint`` automaticky, proto standardně vidíte pěkný výpis."

# a55e545ba25141af9f6bd2df4b35f02c
#: ../../src/tutorial.rst:892
msgid "Note that there is also a printing module available, ``sympy.printing``.  Other printing methods available through this module are:"
msgstr "Všimněte si, že je přístupný modul pro výpisy, ``sympy.printing``. Další metody dostupné díky tomuto modulu jsou:"

# e5329a0202044246a97cad451de550a0
#: ../../src/tutorial.rst:895
msgid "``pretty(expr)``, ``pretty_print(expr)``, ``pprint(expr)``: Return or print, respectively, a pretty representation of ``expr``. This is the same as the second level of representation described above."
msgstr "* ``pretty(expr)``, ``pretty_print(expr)``, ``pprint(expr)``: Vrací respektive vypisuje, pěknou reprezentaci ``expr``. Je to jako druhá úroveň reprezentace popsané výše."

# 0bac12dbda6540028b304f4b655ae8e3
#: ../../src/tutorial.rst:897
msgid "``latex(expr)``, ``print_latex(expr)``: Return or print, respectively, a `LaTeX <http://www.latex-project.org/>`_  representation of ``expr``"
msgstr "``latex(expr)``, ``print_latex(expr)``: Vrací, respektive vypisuje, `LaTeX <http://www.latex-project.org/>`_  reprezentaci ``expr``"

# 7ec29518a7074721824c874431d421b8
#: ../../src/tutorial.rst:899
msgid "``mathml(expr)``, ``print_mathml(expr)``: Return or print, respectively, a `MathML <http://www.w3.org/Math/>`_ representation of ``expr``."
msgstr " ``mathml(expr)``, ``print_mathml(expr)``: Vrací, respektive vypisuje, `MathML <http://www.w3.org/Math/>`_ reprezentaci ``expr``."

# db586a15ee234c81a4fc8c2142a7f669
#: ../../src/tutorial.rst:901
msgid "``print_gtk(expr)``: Print ``expr`` to `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_, a GTK widget that displays MathML code. The `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_ program is required."
msgstr "``print_gtk(expr)``: Vypisuje ``expr`` do `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_, GTK widgetu, který zobrazuje MathML kód. Je vyžadován program `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_."

# 45d07b3cdda546fdbd118b309704bd24
#: ../../src/tutorial.rst:904
msgid "Further documentation"
msgstr "Další dokumentace"

# 0d07680d11e74714a5138cdb1428893d
#: ../../src/tutorial.rst:906
msgid "Now it's time to learn more about SymPy. Go through the :ref:`SymPy User's Guide <guide>` and :ref:`SymPy Modules Reference <module-docs>`."
msgstr "Nyní je čas dozvědět se více o SymPy. Pročtěte si :ref:`Uživatelskou příručku SymPy <guide>` a :ref:`Přehled modulů SymPy <module-docs>`."

# 0870c87ad84e4bab908444a6e3552d15
#: ../../src/tutorial.rst:910
#, fuzzy
msgid "Be sure to also browse our public `wiki.sympy.org <http://wiki.sympy.org/>`_, that contains a lot of useful examples, tutorials, cookbooks that we and our users contributed, and feel free to edit it."
msgstr "Také si projděte naší veřejnou `wiki.sympy.org <http://wiki.sympy.org/>`_, která obsahuje spoustu užitečných příkladů, tutoriálů a kuchařek, které jsme my a naši uživatelé dodali. A nebojte se je upravit."

# 6c9599bc084b41a580831d5c3c597f64
#: ../../src/tutorial.rst:915
msgid "Translations"
msgstr "Překlady"

# 806c97ff7b32477a876bd5374eb7f773
#: ../../src/tutorial.rst:917
msgid "This tutorial is also available in other languages:"
msgstr "Tento tutoriál je také k dispozici v těchto jazycích:"
