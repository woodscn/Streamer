# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2008, 2009, 2010, 2011, 2012 SymPy Development Team
# This file is distributed under the same license as the SymPy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: SymPy 0.7.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-12-17 15:29\n"
"PO-Revision-Date: 2011-12-29 19:03+0530\n"
"Last-Translator: \n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# 3b8d0d99cbd0485d8a0f874d50c2e0ba
#: ../../src/tutorial.rst:5
msgid "Tutorial"
msgstr "Урок"

# 261dbc2a93064851bb80b80a8985f0bd
#: ../../src/tutorial.rst:10
msgid "Introduction"
msgstr "Въведение"

# d007423f3c5d4407b0ca3221168f4a1e
#: ../../src/tutorial.rst:12
msgid "SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible.  SymPy is written entirely in Python and does not require any external libraries."
msgstr "SymPy е библиотека на Python за символна математика. Тя цели да стане пълнофункционална алгебрична система (CAS - computer algebra system), като поддържа кода възможно най-опростен с цел да бъде разбираем и лесен за разширяване.SymPy е изцяло написана на Python и не изисква външни библиотеки."

# 344f5db4e74749c1a76459f6cec09b63
#: ../../src/tutorial.rst:17
msgid "This tutorial gives an overview and introduction to SymPy. Read this to have an idea what SymPy can do for you (and how) and if you want to know more, read the :ref:`SymPy User's Guide <guide>`, :ref:`SymPy Modules Reference <module-docs>`. or the `sources <https://github.com/sympy/sympy/>`_ directly."
msgstr "Този урок е въведение към SymPy. Прочетете го, за да научите какво и как може SymPy, и ако искате да научите повече, прочетете :ref:`SymPy User's Guide <guide>`, :ref:`SymPy Modules Reference <module-docs>`. или  `сорс код<https://github.com/sympy/sympy/>`_ директно."

# 12619172a6874cb4af84282e3e1bfc39
#: ../../src/tutorial.rst:26
msgid "First Steps with SymPy"
msgstr "Първи стъпки със SymPy"

# 6f67d8997f1a474288d6bd50f5ddbc4f
#: ../../src/tutorial.rst:28
msgid "The easiest way to download it is to go to http://code.google.com/p/sympy/ and download the latest tarball from the Featured Downloads:"
msgstr "Най-лесният начин да свалите SymPy е да отидете на http://code.google.com/p/sympy/  и да изтеглите последния архив."

# 65bde5e4aded4818bc11c4b9cfc8a3b7
#: ../../src/tutorial.rst:34
msgid "Unpack it:"
msgstr "Разархивирайте го:"

# 76f6f7d72759408084134e093b5d9aea
#: ../../src/tutorial.rst:40
msgid "and try it from a Python interpreter:"
msgstr "и го изпробвайте от интерпретатор на Python:"

# 4ddd39aeea714e9f8495cd77f7e4d7dd
#: ../../src/tutorial.rst:54
msgid "You can use SymPy as shown above and this is indeed the recommended way if you use it in your program. You can also install it using ``./setup.py install`` as any other Python module, or just install a package in your favourite Linux distribution, e.g.:"
msgstr "Може да използвате SymPy както е показано отгоре, което всъщност е препоръчителният начин, ако го използвате във вашата програма. Също така може да го инсталирате, използвайки ./setup.py install, както който и да е модул на Python,или просто инсталирайте пакет във вашата любима Linux дистрибуция, например:"

# ce08a431018449c093786fe229ef9736
#: ../../src/tutorial.rst:80
msgid "For other means how to install SymPy, consult the  Downloads_ tab on the SymPy's webpage."
msgstr "За други начини за инсталация може да погледнете страницата ни за"

# e81794f1d22c4f47b1f0b5f484ccb789
#: ../../src/tutorial.rst:87
msgid "isympy Console"
msgstr "isympy Конзола"

# 342865b9196045a6a2a11ae9d69bc980
#: ../../src/tutorial.rst:89
msgid "For experimenting with new features, or when figuring out how to do things, you can use our special wrapper around IPython called ``isympy`` (located in ``bin/isympy`` if you are running from the source directory) which is just a standard Python shell that has already imported the relevant SymPy modules and defined the symbols x, y, z and some other things:"
msgstr "За да експериментирате с нови функционалности или когато се опитвате да разберете как да направите нещата, може да използвате нашата специална обвивка около IPython, наречена isympy (намираща се в bin/isympy,  ако сте компилирали през сорс директорията), която е стандартна конзола на Python и която включва съответните SymPy модули и дефинираните символи  x, y, z, както и някои други неща:"

# 9d9f7e2ea55549268218f99a5b14593a
#: ../../src/tutorial.rst:119
msgid "Commands entered by you are bold. Thus what we did in 3 lines in a regular Python interpreter can be done in 1 line in isympy."
msgstr "Командите, въведени от вас, са удебелени. Така, това което направихме в 3 линии на обикновен Python, може да се направи с 1 линия на isympy."

# f53c41b84d8b4d47894877572350325c
#: ../../src/tutorial.rst:124
msgid "Using SymPy as a calculator"
msgstr "Използване на SymPy като калкулатор"

# c6a7837a22d44c27a5d35a905779bd84
#: ../../src/tutorial.rst:126
msgid "SymPy has three built-in numeric types: Float, Rational and Integer."
msgstr "SymPy има 3 вградени типове числа: Цели, с плаваща запетая и рационални."

# 68eba98bb6f742d799aba6051f7f3d0f
#: ../../src/tutorial.rst:128
msgid "The Rational class represents a rational number as a pair of two Integers: the numerator and the denominator. So Rational(1,2) represents 1/2, Rational(5,2) represents 5/2, and so on."
msgstr "Рационалният клас представлява рационална дроб като двойка от цели числа: числителя и знаменателя, така че Rational(1,2) представлява 1/2, Rational(5,2) 5/2 и така нататък."

# 4178f4aea2b54612a2a0c8f74fe2aa63
#: ../../src/tutorial.rst:147
msgid "Proceed with caution while working with Python int's and floating point numbers, especially in division, since you may create a Python number, not a SymPy number. A ratio of two Python ints may create a float -- the \"true division\" standard of Python 3 and the default behavior of ``isympy`` which imports division from __future__::"
msgstr "Бъдете предпазливи, когато работите с цели и с плаваща запетая числа в Python особено когато делите, защото може да създадете Python число, а не SymPy число. От съотношението на 2 цели числа в Python може да се получи число с плаваща запетая -- \"истинското деление\", което е стандарт в Python 3, и подразбиращото се поведение на ``isympy``, което въвежда делението от __future__::"

# 723ba484cf134b71aaf8e7140c9a3954
#: ../../src/tutorial.rst:157
msgid "But in earlier Python versions where division has not been imported, a truncated int will result::"
msgstr "Но в по-ранните версии на Python, където \"истинското делението\" не бе въведено, като резултат ще бъде закръглено число::"

# 0f88584459994baa87824d3fd4cf34f1
#: ../../src/tutorial.rst:163
msgid "In both cases, however, you are not dealing with a SymPy Number because Python created its own number. Most of the time you will probably be working with Rational numbers, so make sure to use Rational to get the SymPy result. One might find it convenient to equate ``R`` and Rational::"
msgstr "Все пак и в двата случая не използваме SymPy числа, защото Python създава свои собствени. През повечето време най-вероятно ще работите с рационални числа, така че се уверете, че използвате Rational, за да получите очаквания резултат. Може да сметнете за удобно да използвате ``R`` като Rational::"

# bf581140e5ea4f8f98031862c785375e
#: ../../src/tutorial.rst:175
msgid "We also have some special constants, like e and pi, that are treated as symbols (1+pi won't evaluate to something numeric, rather it will remain as 1+pi), and have arbitrary precision::"
msgstr "Ние също така имаме някои специални константи, като e и pi, които се третират като символи (1+pi няма да се изчисли като някое число, а ще си остане 1+pi) и имат арбитрарна точност::"

# 366cb3315e5f4371927639cebbf8a726
#: ../../src/tutorial.rst:189
msgid "as you see, evalf evaluates the expression to a floating-point number"
msgstr "Както виждате, evalf изчислява израза до число с плаваща запетая."

# b300cf55ed11465bac6e0991d6f61a15
#: ../../src/tutorial.rst:191
msgid "The symbol ``oo`` is used for a class defining mathematical infinity::"
msgstr "Също така има и клас, представляващ математическа безкрайност, наречен  ``oo``::"

# addc7fddfd294a0e8da003463f35b614
#: ../../src/tutorial.rst:200
msgid "Symbols"
msgstr "Символи"

# 8508a3480ca34bd4a8741733e17ccc56
#: ../../src/tutorial.rst:202
msgid "In contrast to other Computer Algebra Systems, in SymPy you have to declare symbolic variables explicitly::"
msgstr "За разлика от други компютърни алгебрични системи (CAS), в SymPy вие трябва изрично да декларирате символните променливи::"

# 19bcc88285724ae99b448a86d7980ce9
#: ../../src/tutorial.rst:209
msgid "On the left is the normal Python variable which has been assigned to the SymPy Symbol class. Predefined symbols (including those for symbols with Greek names) are available for import from abc:"
msgstr "Отляво е променливата, на която задаваме като стойност инстанция на SymPy класа Symbol. Инстанциите на този клас могат да се комбинират и да направят израз::"

# 6b654b5bda774aa0a4b150388bc102dc
#: ../../src/tutorial.rst:215
msgid "Symbols can also be created with the ``symbols`` or ``var`` functions, the latter automatically adding the created symbols to the namespace, and both accepting a range notation:"
msgstr ""

# aa93d9743638443ebbae8bc5bee19e56
#: ../../src/tutorial.rst:227
msgid "Instances of the Symbol class \"play well together\" and are the building blocks of expresions::"
msgstr "Инстанциите на този клас могат да се комбинират и да направят израз::"

# c613786cee894688b20cdccfeaac8c9b
#: ../../src/tutorial.rst:239
msgid "They can be substituted with other numbers, symbols or expressions using ``subs(old, new)``::"
msgstr "И да ги замествате с други символи или числа като използвате ``subs(old, new)``::"

# 3872add29a8b4a71a5e26a3218130491
#: ../../src/tutorial.rst:250
msgid "For the remainder of the tutorial, we assume that we have run::"
msgstr "До края на този урок предполагаме, че сте изпълнили следния код::"

# d1b280862f04408a98ba048cc9460eaa
#: ../../src/tutorial.rst:255
msgid "This will make things look better when printed. See the :ref:`printing-tutorial` section below. If you have a unicode font installed, you can pass use_unicode=True for a slightly nicer output."
msgstr "Това ще направи нещата да изглеждат по-добре, когато се принтират (pretty printing). Погледнете секцията за принтиране по-нататък. Ако имате инсталиран някой unicode шрифт, може да подадете use_unicode=True за доста по-красив изход."

# 17ee30ecb05a410d94cccf0cc229ae5b
#: ../../src/tutorial.rst:260
msgid "Algebra"
msgstr "Алгебра"

# 673fbe9f608748128027755ac1b0d7cb
#: ../../src/tutorial.rst:262
msgid "For partial fraction decomposition, use ``apart(expr, x)``::"
msgstr "За да разложите непълни дроби, използвайте ``apart(expr, x)``::"

# 723c57a6e36f43eca18771e2ad246955
#: ../../src/tutorial.rst:287
msgid "To combine things back together, use ``together(expr, x)``::"
msgstr "За да комбинирате нещата отново заедно, използвайте ``together(expr, x)``::"

# 607fa824a12d461d9eaf6c83bbc902d0
#: ../../src/tutorial.rst:309
msgid "Calculus"
msgstr "Висша математика"

# 9cbc010ae5b54d2a9222db8a78a2687c
#: ../../src/tutorial.rst:314
msgid "Limits"
msgstr "Граници"

# e2cfd8cf367b4f41a2eb8f98045e1f45
#: ../../src/tutorial.rst:316
msgid "Limits are easy to use in SymPy, they follow the syntax ``limit(function, variable, point)``, so to compute the limit of f(x) as x -> 0, you would issue ``limit(f, x, 0)``::"
msgstr "Границите са изключително лесни за използване в SymPy. Те имат следния синтаксис limit(function, variable, point), така че за да изчислите границата на f(x), където  x -> 0 бихте използвали ``limit(f, x, 0)``::"

# 7cc96e845d0a4c479199f4a51ed7d665
#: ../../src/tutorial.rst:325
msgid "you can also calculate the limit at infinity::"
msgstr "също така може да изчислите граница до безкрайност::"

# d67693fb8cc04954be3bff6aaa712bfa
#: ../../src/tutorial.rst:336
msgid "for some non-trivial examples on limits, you can read the test file `test_demidovich.py <https://github.com/sympy/sympy/blob/master/sympy/series/tests/test_demidovich.py>`_"
msgstr "За някои не толкова тривиални примери, може да прегледате тестовия файл `test_demidovich.py <https://github.com/sympy/sympy/blob/master/sympy/series/tests/test_demidovich.py>`_"

# c92009d7b6df4e2d8f9fe9ad14657bbd
#: ../../src/tutorial.rst:343
msgid "Differentiation"
msgstr "Диференциално смятане"

# 476aa0220145495a932178c9fc3b305a
#: ../../src/tutorial.rst:345
msgid "You can differentiate any SymPy expression using ``diff(func, var)``. Examples::"
msgstr "Може да изчислите производните на който и да е израз в SymPy, като използвате ``diff(func, var)``. Примери::"

# 35850640eccf4071b1b0318a49055f39
#: ../../src/tutorial.rst:358
msgid "You can check, that it is correct by::"
msgstr "Можете да проверите, че е правилно, като::"

# 5ffab586313e4970aa3c933d631bc676
#: ../../src/tutorial.rst:366
msgid "Higher derivatives can be calculated using the ``diff(func, var, n)`` method::"
msgstr "Производни от по-висок ред могат да бъдат пресметнати чрез използването на метода ``diff(func, var, n)`` ::"

# 0624a0af400f4e78a351b056a7ba009c
#: ../../src/tutorial.rst:383
msgid "Series expansion"
msgstr "Разлагане в ред"

# b40c746b225d4749a9298ad077c3ce4d
#: ../../src/tutorial.rst:385
msgid "Use ``.series(var, point, order)``::"
msgstr "Използвайте метода ``.series(var, point, order)``::"

# f9106b494ab2465bbbd4108736f67a1e
#: ../../src/tutorial.rst:400
msgid "Another simple example::"
msgstr "Друг прост пример::"

# d4aa5a4ef31d4327a70c47b42cc0d2d4
#: ../../src/tutorial.rst:420
msgid "Integration"
msgstr "Интегриране"

# 8e985ebba8d5463bb1af3a3220dd21b0
#: ../../src/tutorial.rst:422
msgid "SymPy has support for indefinite and definite integration of transcendental elementary and special functions via ``integrate()`` facility, which uses powerful extended Risch-Norman algorithm and some heuristics and pattern matching::"
msgstr "SymPy поддръжа определени и неопределени интеграли на елементарни и специални трансцедентни функции с помощта на integrate(), който използва мощния разширен алгоритъм на Risch-Norman и няколко еврестики и сравнения с шаблони::"

# 6ff3ff4c189f45078f75a93aa2863ef9
#: ../../src/tutorial.rst:430
msgid "You can integrate elementary functions::"
msgstr "Можете да декларирате елементарни функции::"

# ead91a6c777f47dea8be1a1e50bdf752
#: ../../src/tutorial.rst:443
msgid "Also special functions are handled easily::"
msgstr "Лесно можете да се справите и със специалните функции::"

# 40ad8cd5c7e3460f9cceb59630cf562c
#: ../../src/tutorial.rst:451
msgid "It is possible to compute definite integrals::"
msgstr "Възможно е да изчислите даден интеграл::"

# 19602e9ed1b641f993f704eb31111beb
#: ../../src/tutorial.rst:460
msgid "Also, improper integrals are supported as well::"
msgstr "Също така се поддържат и неопределени интеграли::"

# b8ef574746f1448ab78da1958f9de616
#: ../../src/tutorial.rst:472
msgid "Complex numbers"
msgstr "Комплексни числа"

# 13fbbe2555b14aefb25e48ac5ed298a0
#: ../../src/tutorial.rst:474
msgid "Besides the imaginary unit, I, which is imaginary, symbols can be created with attributes (e.g. real, positive, complex, etc...) and this will affect how they behave::"
msgstr ""

# d726887f4f0444dba6e4ef6a2bb702d6
#: ../../src/tutorial.rst:491
msgid "Functions"
msgstr "Функции"

# 42585fb828e24af79c0278aa14bcc2c3
#: ../../src/tutorial.rst:493
msgid "**trigonometric**::"
msgstr "**тригонометрични**::"

# be0be9ba76c042b68160f1907d2b0d13
#: ../../src/tutorial.rst:542
msgid "**spherical harmonics**::"
msgstr "**сферични хармонични**::"

# bdc2ad96783444459c3e66c409914143
#: ../../src/tutorial.rst:568
msgid "**factorials and gamma function**::"
msgstr "**факториел и гама функции**::"

# c621f51005504ee9890d34156556de57
#: ../../src/tutorial.rst:586
msgid "**zeta function**::"
msgstr "**дзета функции**::"

# 95ad3014dc9442cc8eb8438b2cc28327
#: ../../src/tutorial.rst:611
msgid "**polynomials**::"
msgstr "**полиноми**::"

# d91cad90caee4aa7b2922a42ebe608b1
#: ../../src/tutorial.rst:650
msgid "Differential Equations"
msgstr "Диференциални уравнения"

# 18467aefa0364cec936571494c1993da
# 65279c1f5c4a448fbb813790d956ac48
#: ../../src/tutorial.rst:652
#: ../../src/tutorial.rst:672
msgid "In ``isympy``::"
msgstr "В ``isympy``::"

# e036530fce79489cbf1c494a9443568f
#: ../../src/tutorial.rst:670
msgid "Algebraic equations"
msgstr "Алгебрични уравнения"

# fd5aedc6ba9f45b4868c10764f9e6797
#: ../../src/tutorial.rst:685
msgid "Linear Algebra"
msgstr "Линейна алгебра"

# 372cf49866874ec1a97d6cb813f8b63b
#: ../../src/tutorial.rst:690
msgid "Matrices"
msgstr "Матрици"

# fc4620da22164a3c8f25be8591759f97
#: ../../src/tutorial.rst:692
msgid "Matrices are created as instances from the Matrix class::"
msgstr "Матриците се създават като инстанции на Matrix класа::"

# 0289f9cec4f140c6adc90aa38f84efee
#: ../../src/tutorial.rst:700
msgid "They can also contain symbols::"
msgstr "също така може да слагате символи в тях::"

# ced23cc091a34db6be3b5597fd056f32
#: ../../src/tutorial.rst:715
msgid "For more about Matrices, see the Linear Algebra tutorial."
msgstr "За повече информация и примери с матрици вижте Linear Algebra tutorial."

# 71124cfe123649c28c7a61251d0b1cdd
#: ../../src/tutorial.rst:720
msgid "Pattern matching"
msgstr "Сравняване на шаблони"

# b9ecf875555748978255bc268bc4123c
#: ../../src/tutorial.rst:722
msgid "Use the ``.match()`` method, along with the ``Wild`` class, to perform pattern matching on expressions. The method will return a dictionary with the required substitutions, as follows::"
msgstr "Използвайте ``.match()`` метода заедно с класа Wild за да сравнявате изрази с даден шаблон. Методът ще върне речник с изисканите замествания, както следва::"

# 06d4a8e419854045af79b0076e71616a
#: ../../src/tutorial.rst:736
msgid "If the match is unsuccessful, it returns ``None``::"
msgstr "Ако съвпадението е неуспешно, методът връща ``None``::"

# 7219ffc6e8b0486a913297c19b5fce1f
#: ../../src/tutorial.rst:741
msgid "One can also use the exclude parameter of the ``Wild`` class to ensure that certain things do not show up in the result::"
msgstr "Можете да използвате и втория незадължителен параметър exclude, за да се уверите, че някои неща не се появяват в резултата::"

# a692f291013a4777a4771188901c6bf2
#: ../../src/tutorial.rst:755
msgid "Printing"
msgstr "Принтиране"

# 8cfe16423a79408c828d270def412899
#: ../../src/tutorial.rst:757
msgid "There are many ways to print expressions."
msgstr "Има много начини, по които изразите може да се отпечатат."

# a9891e6028b644879ce5e3a8489a72a5
#: ../../src/tutorial.rst:759
msgid "**Standard**"
msgstr "**Стандартен начин**"

# 9802b10f6c2d4b7997302f4315e8bf2a
#: ../../src/tutorial.rst:761
msgid "This is what ``str(expression)`` returns and it looks like this:"
msgstr "Това е резултатът от ``str(expression)`` и изглежда така:"

# 461df293b09c46b1bf24bc5c335b4401
#: ../../src/tutorial.rst:772
msgid "**Pretty printing**"
msgstr "**Красиво отпечатване (pretty printing)**"

# 29c9e2204a0948db9d8328300f3bdd1a
#: ../../src/tutorial.rst:774
msgid "Nice ascii-art printing is produced by the ``pprint`` function:"
msgstr "Това е хубаво отпечатване тип ascii-art, направено от ``pprint`` функция:"

# 5fc9fa809fa04cee8113a669f032b9c3
#: ../../src/tutorial.rst:793
msgid "If you have a unicode font installed, the ``pprint`` function will use it by default. You can override this using the ``use_unicode`` option.:"
msgstr "Ако имате инсталиран unicode шрифт, то той би трябвало да бъде използван по подразбиране. Може смените това поведение, като използвате опцията ``use_unicode``.:"

# dcbf982351c1414bb0c2653039d6f569
#: ../../src/tutorial.rst:803
msgid "See also the wiki `Pretty Printing <https://github.com/sympy/sympy/wiki/Pretty-Printing>`_ for more examples of a nice unicode printing."
msgstr "Също така вижте уикито `Pretty Printing <https://github.com/sympy/sympy/wiki/Pretty-Printing>`_ за повече примери за добро unicode принтиране."

# af26680251b0437e807a48d7946c3724
#: ../../src/tutorial.rst:807
msgid "Tip: To make pretty printing the default in the Python interpreter, use::"
msgstr "Съвет:За да направите красивото отпечатване(pretty printing) по подразбиране в интерпретатора на Python, използвайте::"

# b34cf35aca67417bbedfd0f9912d3dab
#: ../../src/tutorial.rst:830
msgid "**Python printing**"
msgstr "**Python отпечатване**"

# f6300e28499f4c23b1a18aca896340bb
#: ../../src/tutorial.rst:846
msgid "**LaTeX printing**"
msgstr "**LaTeX отпечатване**"

# 3b81c7e35c364676a8ec8587b515ac8b
#: ../../src/tutorial.rst:863
msgid "**MathML**"
msgstr "*MathML**"

# ee36b86c5d54419fbde01ac89cab213b
#: ../../src/tutorial.rst:875
msgid "**Pyglet**"
msgstr "**Pyglet**"

# 8ea61d943b2b4960a879932eba46bc1b
#: ../../src/tutorial.rst:881
msgid "If pyglet is installed, a pyglet window will open containing the LaTeX rendered expression:"
msgstr "И pyglet прозорец с LaTeX рендиран израз ще се появи:"

# 8741a66d24b04738a563afc90a41567b
#: ../../src/tutorial.rst:887
msgid "Notes"
msgstr "Бележки"

# 51219a05b9a84e79b754d8d03b7fc4fb
#: ../../src/tutorial.rst:889
msgid "``isympy`` calls ``pprint`` automatically, so that's why you see pretty printing by default."
msgstr "``isympy`` извиква ``pprint`` автоматично, поради тази причина виждате красивото отпечатване (pretty printing) по подразбиране."

# 7b126ec3363b4c63a6d6b98728a9738a
#: ../../src/tutorial.rst:892
msgid "Note that there is also a printing module available, ``sympy.printing``.  Other printing methods available through this module are:"
msgstr "Забележете, че също така има модул за принтиране, ``sympy.printing``. Други методи за принтиране, налични чрез този модул, са:"

# 1001063c4e97442dbcb0491eb0641bba
#: ../../src/tutorial.rst:895
msgid "``pretty(expr)``, ``pretty_print(expr)``, ``pprint(expr)``: Return or print, respectively, a pretty representation of ``expr``. This is the same as the second level of representation described above."
msgstr "``pretty(expr)``, ``pretty_print(expr)``, ``pprint(expr)``: Връща или принтира, съответно, красива репрезентация на ``expr``. Това е еквивалентно на второто ниво на репрезентация показано по-горе."

# ee0ca8e34ce04b458228cb9d6565ec1a
#: ../../src/tutorial.rst:897
msgid "``latex(expr)``, ``print_latex(expr)``: Return or print, respectively, a `LaTeX <http://www.latex-project.org/>`_  representation of ``expr``"
msgstr "``latex(expr)``, ``print_latex(expr)``: Връща или принтира, съответно, `LaTeX <http://www.latex-project.org/>`_  репрезентация на ``expr``"

# ebfeade491644b0b85f72b00bd3c1bdf
#: ../../src/tutorial.rst:899
msgid "``mathml(expr)``, ``print_mathml(expr)``: Return or print, respectively, a `MathML <http://www.w3.org/Math/>`_ representation of ``expr``."
msgstr "``mathml(expr)``, ``print_mathml(expr)``: Връща или принтира, съответно, `MathML <http://www.w3.org/Math/>`_ репрезентация на ``expr``."

# bc0334fae2224eb2bfc81a55e7f522dd
#: ../../src/tutorial.rst:901
msgid "``print_gtk(expr)``: Print ``expr`` to `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_, a GTK widget that displays MathML code. The `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_ program is required."
msgstr "``print_gtk(expr)``: Принтира ``expr`` на `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_, GTK интрумент, който визуализира MathML код. Изисква се `Gtkmathview <http://helm.cs.unibo.it/mml-widget/>`_ ."

# e76c7af419504e458893b76b1b485fd4
#: ../../src/tutorial.rst:904
msgid "Further documentation"
msgstr "Допълнителна документация"

# 2757e954e4c04b01bf9607f2127c3146
#: ../../src/tutorial.rst:906
msgid "Now it's time to learn more about SymPy. Go through the :ref:`SymPy User's Guide <guide>` and :ref:`SymPy Modules Reference <module-docs>`."
msgstr "Време е да научите повече за SymPy. Прегледайте :ref:`SymPy User's Guide <guide>` и :ref:`SymPy Modules Reference <module-docs>`."

# a037027043bd483dab5a52bd8d325980
#: ../../src/tutorial.rst:910
msgid "Be sure to also browse our public `wiki.sympy.org <http://wiki.sympy.org/>`_, that contains a lot of useful examples, tutorials, cookbooks that we and our users contributed, and feel free to edit it."
msgstr "Не пропускайте и да прегледате нашето публично уики – `wiki.sympy.org <http://wiki.sympy.org/>`_, което съдържа много полезни примери, уроци и наръчници, за които ние и нашите потребители допринасяме и Ви окуражаваме да редактирате и подобрите."
