def configuration(parent_package='',top_path=None,compile_type='debug'):
    from numpy.distutils.misc_util import Configuration
    opts={'debug':'--debug --noopt --noarch','run':'--opt=-O3'}
    config = Configuration('Streamer',parent_package,top_path)
    config.add_extension('Godunov',append_GU("Godunov.f90"))
    config.add_extension('BoundaryConditionsStuff',
                         append_GU("BoundaryConditionsStuff.f90"))
    config.add_extension('STLA_IO','stla_io.f90')
    config.add_extension('TimeAdvancementStuff',
                         append_GU("TimeAdvancementStuff.f90"),
        extra_compile_args=["-fbounds-check"])
    config.add_extension('CGNS_Interface','cgns_interface.f90',
                         include_dirs=['/usr/local/include','/usr/include'],
                         libraries=['cgns'],
                         library_dirs=['/usr/local/lib','/usr/lib'])
    return config

def append_GU(fin):
    fout_name = fin.split('.')[0]+'GU.f90'
    fout = open(fout_name,'w')
    fout.write('''!This file is automatically generated from
    !'''+fin.split('x')[0]+'''.f90 and from GeneralUtilities.f90
    ''')
    f=open(fin)
    for line in f:
        fout.write(line)
    f.close()
    f=open('GeneralUtilities.f90')
    for line in f:
        fout.write(line)
    f.close()
    fout.close()
    return(fout_name)
    
    

if __name__ == "__main__":
    from numpy.distutils.core import setup
    setup(**configuration(top_path='').todict())
