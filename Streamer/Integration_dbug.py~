def mc_integrate(f,ranges,calls,args=()):
    f_sum = 0
    for n in xrange(calls):
        coords_lst = []
        for rng in ranges:
            coords_lst.append(rng[0] + rng[1]*numpy.random.random())
        f_sum += f(coords_lst,args)
        del coords_lst
    vol = numpy.prod([float(rng[1])-float(rng[0]) for rng in ranges])
    return vol/calls*f_sum    
def test_func((xi,eta,zeta),(t)):
    return xi**2-4*eta*numpy.sqrt(xi)+zeta*xi*eta**2
if __name__=="__main__":
    for n in range(100):
        calls = 10000
        t_range = (0,1)
        xi_range = (0,1)
        eta_range = (0,1)
        zeta_range = (0,1)
        left = mc_integrate(cons_sample,(xi_range,eta_range,zeta_range),
                            calls,args=(t_range[0],elem))
        right = mc_integrate(cons_sample,(xi_range,eta_range,zeta_range),
                             calls,args=(t_range[1],elem))
        
